warning: push.default is unset; its implicit value is changing in
Git 2.0 from 'matching' to 'simple'. To squelch this message
and maintain the current behavior after the default changes, use:

  git config --global push.default matching

To squelch this message and adopt the new behavior now, use:

  git config --global push.default simple

When push.default is set to 'matching', git will push local branches
to the remote branches that already exist with the same name.

In Git 2.0, Git will default to the more conservative 'simple'
behavior, which only pushes the current branch to the corresponding
remote branch that 'git pull' uses to update the current branch.

See 'git help config' and search for 'push.default' for further information.
(the 'simple' mode was introduced in Git 1.7.11. Use the similar mode
'current' instead of 'simple' if you sometimes use older versions of Git)

Warning: untrusted X11 forwarding setup failed: xauth key data not generated
Warning: No xauth data; using fake authentication data for X11 forwarding.
X11 forwarding request failed on channel 0
To git@github.com:fenghuo/coding.git
   514f741..6d4125d  master -> master
In file included from /usr/include/c++/4.8.3/bits/hashtable.h:35:0,
                 from /usr/include/c++/4.8.3/unordered_map:47,
                 from Dropbox.cpp:5:
/usr/include/c++/4.8.3/bits/hashtable_policy.h: In instantiation of ‘struct std::__detail::__is_noexcept_hash<File, Hash>’:
/usr/include/c++/4.8.3/type_traits:121:12:   recursively required from ‘struct std::__and_<std::is_default_constructible<Hash>, std::is_copy_assignable<Hash>, std::__detail::__is_noexcept_hash<File, Hash> >’
/usr/include/c++/4.8.3/type_traits:121:12:   required from ‘struct std::__and_<std::__is_fast_hash<Hash>, std::is_default_constructible<Hash>, std::is_copy_assignable<Hash>, std::__detail::__is_noexcept_hash<File, Hash> >’
/usr/include/c++/4.8.3/type_traits:127:38:   required from ‘struct std::__not_<std::__and_<std::__is_fast_hash<Hash>, std::is_default_constructible<Hash>, std::is_copy_assignable<Hash>, std::__detail::__is_noexcept_hash<File, Hash> > >’
/usr/include/c++/4.8.3/bits/unordered_map.h:99:66:   required from ‘class std::unordered_map<File, std::vector<long unsigned int>, Hash>’
Dropbox.cpp:58:49:   required from here
/usr/include/c++/4.8.3/bits/hashtable_policy.h:85:33: error: passing ‘const Hash’ as ‘this’ argument of ‘size_t Hash::operator()(const File&)’ discards qualifiers [-fpermissive]
  noexcept(declval<const _Hash&>()(declval<const _Key&>()))>
                                 ^
Dropbox.cpp: In function ‘std::vector<std::vector<std::basic_string<char> > > findDuplicates(const std::vector<std::basic_string<char> >&, const std::vector<File>&)’:
Dropbox.cpp:63:19: error: ‘class std::vector<long unsigned int>’ has no member named ‘push’
             group.push(i);
                   ^
Dropbox.cpp:64:13: error: ‘found’ was not declared in this scope
             found = true;
             ^
Dropbox.cpp:66:18: error: ‘hasCode’ was not declared in this scope
             dict[hasCode] = {i};
                  ^
Dropbox.cpp: In function ‘void findAllFiles(std::string, std::vector<std::basic_string<char> >&, std::vector<File>&)’:
Dropbox.cpp:83:23: error: ‘getFileFromFileName’ was not declared in this scope
       Files.push_back(getFileFromFileName)
                       ^
Dropbox.cpp:84:5: error: expected ‘;’ before ‘names’
     names.append(this_names);
     ^
Dropbox.cpp:85:5: error: ‘fils’ was not declared in this scope
     fils.append(this_Files);
     ^
In file included from /usr/include/c++/4.8.3/bits/hashtable.h:35:0,
                 from /usr/include/c++/4.8.3/unordered_map:47,
                 from Dropbox.cpp:5:
/usr/include/c++/4.8.3/bits/hashtable_policy.h: In instantiation of ‘std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, true>::__hash_code std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, true>::_M_hash_code(const _Key&) const [with _Key = File; _Value = std::pair<const File, std::vector<long unsigned int> >; _ExtractKey = std::__detail::_Select1st; _H1 = Hash; _H2 = std::__detail::_Mod_range_hashing; std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, true>::__hash_code = long unsigned int]’:
/usr/include/c++/4.8.3/bits/hashtable.h:1057:50:   required from ‘std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::count(const key_type&) const [with _Key = File; _Value = std::pair<const File, std::vector<long unsigned int> >; _Alloc = std::allocator<std::pair<const File, std::vector<long unsigned int> > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<File>; _H1 = Hash; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>; std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type = long unsigned int; std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::key_type = File]’
/usr/include/c++/4.8.3/bits/unordered_map.h:561:30:   required from ‘std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::size_type std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::count(const key_type&) const [with _Key = File; _Tp = std::vector<long unsigned int>; _Hash = Hash; _Pred = std::equal_to<File>; _Alloc = std::allocator<std::pair<const File, std::vector<long unsigned int> > >; std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::size_type = long unsigned int; std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::key_type = File]’
Dropbox.cpp:61:33:   required from here
/usr/include/c++/4.8.3/bits/hashtable_policy.h:1103:22: error: passing ‘const Hash’ as ‘this’ argument of ‘size_t Hash::operator()(const File&)’ discards qualifiers [-fpermissive]
       { return _M_h1()(__k); }
                      ^
In file included from /usr/include/c++/4.8.3/string:48:0,
                 from /usr/include/c++/4.8.3/bits/locale_classes.h:40,
                 from /usr/include/c++/4.8.3/bits/ios_base.h:41,
                 from /usr/include/c++/4.8.3/ios:42,
                 from /usr/include/c++/4.8.3/ostream:38,
                 from /usr/include/c++/4.8.3/iostream:39,
                 from Dropbox.cpp:2:
/usr/include/c++/4.8.3/bits/stl_function.h: In instantiation of ‘bool std::equal_to<_Tp>::operator()(const _Tp&, const _Tp&) const [with _Tp = File]’:
/usr/include/c++/4.8.3/bits/hashtable_policy.h:1166:72:   required from ‘static bool std::__detail::_Equal_helper<_Key, _Value, _ExtractKey, _Equal, _HashCodeType, true>::_S_equals(const _Equal&, const _ExtractKey&, const _Key&, _HashCodeType, std::__detail::_Hash_node<_Value, true>*) [with _Key = File; _Value = std::pair<const File, std::vector<long unsigned int> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<File>; _HashCodeType = long unsigned int]’
/usr/include/c++/4.8.3/bits/hashtable_policy.h:1470:23:   required from ‘bool std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits>::_M_equals(const _Key&, std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits>::__hash_code, std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits>::__node_type*) const [with _Key = File; _Value = std::pair<const File, std::vector<long unsigned int> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<File>; _H1 = Hash; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits<true, false, true>; std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits>::__hash_code = long unsigned int; std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits>::__node_type = std::__detail::_Hash_node<std::pair<const File, std::vector<long unsigned int> >, true>]’
/usr/include/c++/4.8.3/bits/hashtable.h:1066:4:   required from ‘std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::count(const key_type&) const [with _Key = File; _Value = std::pair<const File, std::vector<long unsigned int> >; _Alloc = std::allocator<std::pair<const File, std::vector<long unsigned int> > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<File>; _H1 = Hash; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>; std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type = long unsigned int; std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::key_type = File]’
/usr/include/c++/4.8.3/bits/unordered_map.h:561:30:   required from ‘std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::size_type std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::count(const key_type&) const [with _Key = File; _Tp = std::vector<long unsigned int>; _Hash = Hash; _Pred = std::equal_to<File>; _Alloc = std::allocator<std::pair<const File, std::vector<long unsigned int> > >; std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::size_type = long unsigned int; std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::key_type = File]’
Dropbox.cpp:61:33:   required from here
/usr/include/c++/4.8.3/bits/stl_function.h:208:20: error: passing ‘const File’ as ‘this’ argument of ‘bool File::operator==(const File&)’ discards qualifiers [-fpermissive]
       { return __x == __y; }
                    ^
